# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    tags:
      - '*'
permissions:
  contents: write
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Zig
        # You may pin to the exact commit or the version.
        # uses: goto-bus-stop/setup-zig@7ab2955eb728f5440978d5824358023be3a2802d
        uses: goto-bus-stop/setup-zig@v2.2.0
        with:
          # Version of the zig compiler to use (must be 0.3.0 or up)
          version: master
          

      # Runs a single command using the runners shell
      - name: Build winpaste x64
        run: |
          zig build -Doptimize=ReleaseSmall -Dtarget=x86_64-windows
          zip -j winpaste-x64.zip zig-out/bin/winpaste.exe
      - name: Build winpaste arm64
        run: |
          zig build -Doptimize=ReleaseSmall -Dtarget=aarch64-windows
          zip -j winpaste-arm64.zip zig-out/bin/winpaste.exe

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
      - name: upload x64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./winpaste-x64.zip
          asset_name: winpaste-x64.zip
          asset_content_type: application/zip
          
      - name: upload arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./winpaste-arm64.zip
          asset_name: winpaste-arm64.zip
          asset_content_type: application/zip
